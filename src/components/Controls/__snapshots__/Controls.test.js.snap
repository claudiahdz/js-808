// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Controls renders the component correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="buttons"
>
    <div
        className="button"
        onClick={[Function]}
    >
        Play
    </div>
    <div
        className="button"
        onClick={[Function]}
    >
        Stop
    </div>
    <select
        className="button"
        onChange={[Function]}
    >
        <option
            value={0}
        >
            4 on the floor
        </option>
        <option
            value={1}
        >
            Sequence 
            1
        </option>
        <option
            value={2}
        >
            Sequence 
            2
        </option>
        <option
            value={3}
        >
            Sequence 
            3
        </option>
    </select>
    <input
        max="180"
        min="60"
        onChange={[Function]}
        type="range"
        value={60}
    />
    <span>
        60
         BMP
    </span>
    <div
        className="button"
        onClick={[Function]}
    >
        Clear
    </div>
</div>,
  "nodes": Array [
    <div
      className="buttons"
>
      <div
            className="button"
            onClick={[Function]}
      >
            Play
      </div>
      <div
            className="button"
            onClick={[Function]}
      >
            Stop
      </div>
      <select
            className="button"
            onChange={[Function]}
      >
            <option
                  value={0}
            >
                  4 on the floor
            </option>
            <option
                  value={1}
            >
                  Sequence 
                  1
            </option>
            <option
                  value={2}
            >
                  Sequence 
                  2
            </option>
            <option
                  value={3}
            >
                  Sequence 
                  3
            </option>
      </select>
      <input
            max="180"
            min="60"
            onChange={[Function]}
            type="range"
            value={60}
      />
      <span>
            60
             BMP
      </span>
      <div
            className="button"
            onClick={[Function]}
      >
            Clear
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Controls
        changeBeat={[Function]}
        changeTempo={[Function]}
        clear={[Function]}
        pause={[Function]}
        play={[Function]}
        status="stop"
        stop={[Function]}
        tempo={60}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "changeBeat": [Function],
          "changeTempo": [Function],
          "clear": [Function],
          "pause": [Function],
          "play": [Function],
          "status": "stop",
          "stop": [Function],
          "tempo": 60,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="buttons"
>
          <div
                    className="button"
                    onClick={[Function]}
          >
                    Play
          </div>
          <div
                    className="button"
                    onClick={[Function]}
          >
                    Stop
          </div>
          <select
                    className="button"
                    onChange={[Function]}
          >
                    <option
                              value={0}
                    >
                              4 on the floor
                    </option>
                    <option
                              value={1}
                    >
                              Sequence 
                              1
                    </option>
                    <option
                              value={2}
                    >
                              Sequence 
                              2
                    </option>
                    <option
                              value={3}
                    >
                              Sequence 
                              3
                    </option>
          </select>
          <input
                    max="180"
                    min="60"
                    onChange={[Function]}
                    type="range"
                    value={60}
          />
          <span>
                    60
                     BMP
          </span>
          <div
                    className="button"
                    onClick={[Function]}
          >
                    Clear
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="buttons"
>
          <div
                    className="button"
                    onClick={[Function]}
          >
                    Play
          </div>
          <div
                    className="button"
                    onClick={[Function]}
          >
                    Stop
          </div>
          <select
                    className="button"
                    onChange={[Function]}
          >
                    <option
                              value={0}
                    >
                              4 on the floor
                    </option>
                    <option
                              value={1}
                    >
                              Sequence 
                              1
                    </option>
                    <option
                              value={2}
                    >
                              Sequence 
                              2
                    </option>
                    <option
                              value={3}
                    >
                              Sequence 
                              3
                    </option>
          </select>
          <input
                    max="180"
                    min="60"
                    onChange={[Function]}
                    type="range"
                    value={60}
          />
          <span>
                    60
                     BMP
          </span>
          <div
                    className="button"
                    onClick={[Function]}
          >
                    Clear
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Controls
    changeBeat={[Function]}
    changeTempo={[Function]}
    clear={[Function]}
    pause={[Function]}
    play={[Function]}
    status="stop"
    stop={[Function]}
    tempo={60}
/>,
}
`;
